name: Build, Sign, and Release

on:
  push:
    tags: ['v*']

jobs:
  release:
    runs-on: macos-latest
    timeout-minutes: 60  # Extra time for notarization
    permissions:
      contents: write
      packages: write
      actions: read

    steps:
      # ======================
      # SETUP & BUILD
      # ======================
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build frontend
        run: npm run build:frontend

      # ======================
      # CODE SIGNING
      # ======================
      - name: Clean keychains
        run: |
          security delete-keychain temp.keychain || true
          security list-keychains -d user -s login.keychain-db

      - name: Import signing certificate
        uses: Apple-Actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.MAC_CERTIFICATE }}
          p12-password: ${{ secrets.MAC_CERTIFICATE_PASSWORD }}

      - name: Build signed app
        run: |
          npx electron-builder --mac --arm64 \
            --config.mac.identity="Austin Ginn (P76H6523Q4)" \
            --config.forceCodeSigning=true \
            --config.mac.target=dir

      - name: Verify signature
        run: |
          codesign -dv --verbose=4 "./dist/mac-arm64/Wing to LiveTrax.app"
          spctl -a -vv "./dist/mac-arm64/Wing to LiveTrax.app" || true

      # ======================
      # NOTARIZATION
      # ======================
      - name: Notarize application
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
        run: |
          # Package for notarization
          ditto -c -k --keepParent "./dist/mac-arm64/Wing to LiveTrax.app" "WingToLiveTrax.zip"
          
          # Submit to Apple
          xcrun notarytool submit "WingToLiveTrax.zip" \
            --apple-id "$APPLE_ID" \
            --team-id "P76H6523Q4" \
            --password "$APPLE_ID_PASSWORD" \
            --wait
          
          # Staple ticket
          xcrun stapler staple "./dist/mac-arm64/Wing to LiveTrax.app"

      # ======================
      # CREATE FINAL ARTIFACT
      # ======================
      - name: Create DMG (no publish)
        run: |
          # Force-disable publishing with dummy config
          npx electron-builder --mac --arm64 \
            --config.mac.target=dmg \
            --config.publish.provider=generic \
            --config.publish.url=http://example.com

      # ======================
      # MANUAL RELEASE PROCESS
      # ======================
      - name: Get version
        id: version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release create "${{ github.ref_name }}" \
            "./dist/Wing to LiveTrax-${{ steps.version.outputs.version }}-arm64.dmg" \
            --title "${{ github.ref_name }}" \
            --notes "Automatic release"