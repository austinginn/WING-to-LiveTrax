name: Build, Sign, and Release

on:
  push:
    tags: ['v*']

jobs:
  release:
    runs-on: macos-latest
    timeout-minutes: 45
    permissions:
      contents: write

    steps:
      # ======================
      # SETUP
      # ======================
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          npm install @electron/notarize --save-dev

      - name: Build frontend
        run: npm run build:frontend

      # ======================
      # CODE SIGNING
      # ======================
      - name: Clean keychains
        run: |
          security delete-keychain temp.keychain || true
          security list-keychains -d user -s login.keychain-db

      - name: Import signing certificate
        uses: Apple-Actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.MAC_CERTIFICATE }}
          p12-password: ${{ secrets.MAC_CERTIFICATE_PASSWORD }}

      # ======================
      # BUILD & NOTARIZE
      # ======================
      - name: Build and notarize
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
        run: |
          npx electron-builder --mac --arm64 \
            --config.mac.identity="Austin Ginn (P76H6523Q4)" \
            --config.forceCodeSigning=true

      # ======================
      # VERIFICATION
      # ======================
      - name: Verify artifacts
        run: |
          # Verify code signing
          codesign -dv --verbose=4 "./dist/mac-arm64/Wing to LiveTrax.app"
          
          # Verify notarization
          spctl -a -vv -t install "./dist/mac-arm64/Wing to LiveTrax.app"
          xcrun stapler validate "./dist/mac-arm64/Wing to LiveTrax.app"

          # Verify DMG contents
          hdiutil attach "./dist/Wing to LiveTrax.dmg" -mountpoint /Volumes/WingInstaller
          ls -la /Volumes/WingInstaller
          hdiutil detach /Volumes/WingInstaller

      # ======================
      # PUBLISH RELEASE
      # ======================
      - name: Publish release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          VERSION=$(node -p "require('./package.json').version")
          gh release create "${{ github.ref_name }}" \
            "./dist/Wing to LiveTrax.dmg" \
            --title "v$VERSION" \
            --notes "Automatic release"