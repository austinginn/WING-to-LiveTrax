name: Build & Publish Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: npm

      - name: Decode Apple Developer P12
        if: runner.os == 'macOS'
        env:
          CERT_P12_B64: ${{ secrets.APPLE_CERT_P12 }}
        run: |
          mkdir -p build
          # Decode base64 keychain P12 into a file
          printf '%s' "$CERT_P12_B64" | openssl base64 -A -d -out build/developer-id.p12

      - name: Inspect P12 Validity
        if: runner.os == 'macOS'
        env:
          P12_PASS: ${{ secrets.APPLE_CERT_PASSWORD }}
        run: |
          # Verify this is a valid PKCS#12
          openssl pkcs12 -info -in build/developer-id.p12 -passin pass:$P12_PASS -noout

      - name: Install dependencies & Build Frontend
        run: |
          npm ci
          npm run build:frontend

      - name: Package, Sign & Notarize macOS
        if: runner.os == 'macOS'
        env:
          CSC_LINK:           build/developer-id.p12
          CSC_KEY_PASSWORD:   ${{ secrets.APPLE_CERT_PASSWORD }}
          APPLE_ID:           ${{ secrets.APPLE_ID }}
          APPLE_APP_SPECIFIC_PASSWORD:  ${{ secrets.APPLE_ID_PASS }}
          APPLE_TEAM_ID:              ${{ secrets.APPLE_TEAM_ID }}
          GH_TOKEN:           ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "==> Building for macOS Intel..."
          npm run build:macIntel
          echo "==> Building for macOS ARM..."
          npm run build:macArm

      - name: Package Windows
        if: runner.os == 'windows-latest'
        run: npm run build:win

      - name: Package Linux
        if: runner.os == 'ubuntu-latest'
        run: npm run build:linux

      - name: Create / Upload GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            dist/*.dmg
            dist/*.zip
            dist/*.AppImage
            dist/*.deb
